<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--声明 注册springmvc核心对象DispatcherServlet
        需要在tomcat服务器启动后 创建DispatcherServlet
            在DispatcherServlet在他的创建过程中 会创建springmvc容器对象
            读取springmvc配置文件 吧这个配置文件中的对象都创建好 当用户发起请求时就可以直接使用对象了

        servlet在初始化时会执行init() 方法 DispatcherServlet在init中{
            // 创建容器读取配置文件
            webApplicationContext ctx = new ClassPathXmlApplicationContext("springmvc.xml");
            // 把容器方法ServletContext中
            getServletContext().setAttribute(key, ctx);
       }

        配置文件默认读取WEB-INF目录下
    -->

    <servlet>
        <servlet-name>myweb</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--自定义读取文件的位置-->
        <init-param>
            <!--自定义文件的属性-->
            <param-name>contextConfigLocation</param-name>
            <!--自定义文件位置-->
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>

        <!--希望在tomcat启动后 创建Servlet对象
            load-on-startup 大于等于零的整数 数值越小 Tomcat创建对象时间越早
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>myweb</servlet-name>
        <!--
            url-pattern 有两个值可以使用
                1 扩展名  *.xxx  xxx是自定义扩展名  *.do  *.action *.mvc
                2 使用斜杠
        -->
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>
</web-app>