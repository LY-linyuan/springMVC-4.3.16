<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--声明组件扫描器-->
    <context:component-scan base-package="com.bjpowernode.controller"></context:component-scan>

    <!--声明 springmvc 框架中的试图解析器  帮助开发人员设置试图文件的路线-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀  是视图文件的路径-->
        <property name="prefix" value="/WEB-INF/view/"></property>
        <!--后缀  表示视图文件的扩展名-->
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--mvc:resources  和  mvc:annotation-driven  有一定的冲突-->
    <!--没有注解驱动  加入mvc的应该-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--第二种处理静态资源的方式
        mvc:resources 加入后 框架会创建 ResourceHttpRequestHandler处理器对象
            让这个对象 去处理静态资源的访问 不依赖tomcat服务器 (常用)
                mapping 访问静态资源的uri地址  使用通配符 ""
                location 静态资源在项目中的 目录位置
                    img/** 表示image/p1.png , img/user/logo.gif,
                            只要是img包下及其字包全部
    -->
    <mvc:resources mapping="/img/**" location="/img/"></mvc:resources>
    <mvc:resources mapping="/html/**" location="/html/"></mvc:resources>
    <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>

    <!--使用一个配置语句来指定多种静态资源的访问 -->
    <mvc:resources mapping="/static/**" location="/static/"></mvc:resources>

</beans>